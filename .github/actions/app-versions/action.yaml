---
# yaml-language-server: $schema=https://json.schemastore.org/github-action.json
name: Application Versions
description: Takes an upstream version string and returns various version types

inputs:
  upstream-version:
    description: Upstream Version
    required: true

outputs:
  is-valid-semver:
    description: If version is valid semantic versioning
    value: ${{ steps.versions.outputs.is-valid-semver }}
  semantic:
    description: Semantic Version
    value: ${{ steps.versions.outputs.semantic }}
  raw:
    description: Raw Version
    value: ${{ steps.versions.outputs.raw }}
  upstream:
    description: Upstream Version
    value: ${{ steps.versions.outputs.upstream }}

runs:
  using: composite
  steps:
    - name: Setup Node
      uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
      with:
        node-version: 22.x

    - name: Install Semver
      shell: bash
      run: npm install semver

    - name: Application Versions
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      id: versions
      with:
        script: |
          const semver = require('semver');

          // Strip the v prefix and pre-release info
          function sanitize(version) {
              return version.replace(/^v/, '').split('-')[0];
          }

          function calver() {
              const now = new Date();
              return `${now.getFullYear()}.${now.getMonth() + 1}.${now.getDate()}`;
          }

          const upstreamVersion = '${{ inputs.upstream-version }}';
          const strictSemverRegex = /^v?(\d+(\.\d+)?(\.\d+)?)/;

          const parsedVersion = strictSemverRegex.exec(upstreamVersion);
          const isValidSemver = parsedVersion !== null;
          const parsedSemver = isValidSemver ? semver.coerce(parsedVersion[0]) : null;
          const semanticVersion = isValidSemver ? `${parsedSemver.major}.${parsedSemver.minor}.${parsedSemver.patch}` : calver();
          const rawVersion = isValidSemver ? sanitize(upstreamVersion) : upstreamVersion;

          core.setOutput('is-valid-semver', isValidSemver);
          core.setOutput('semantic', semanticVersion);
          core.setOutput('raw', rawVersion);
          core.setOutput('upstream', upstreamVersion);
