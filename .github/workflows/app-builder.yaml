---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: App Builder

on:
  workflow_call:
    inputs:
      app:
        type: string
        description: App Name
        required: true
      release:
        type: boolean
        description: Release
        required: true

permissions:
  contents: read
  packages: write
  id-token: write
  attestations: write

jobs:
  plan:
    name: Plan
    runs-on: ubuntu-latest
    outputs:
      app-exists: ${{ steps.app-exists.outputs.exists }}
      platforms: ${{ steps.app-options.outputs.platforms }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Check For Existing App
        uses: ./.github/actions/app-exists
        id: app-exists
        with:
          app: ${{ inputs.app }}

      - name: Get App Options
        uses: ./.github/actions/app-options
        id: app-options
        with:
          app: ${{ inputs.app }}

      - name: Get App Versions
        uses: ./.github/actions/app-versions
        id: app-versions
        with:
          upstream-version: ${{ steps.app-options.outputs.version }}

      - name: Build App Metadata
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        id: meta
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index
        with:
          flavor: latest=false
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ inputs.app }}
          tags: |
            type=semver,pattern={{version}},value=${{ steps.app-versions.outputs.semantic }},enable=${{ steps.app-versions.outputs.is-valid-semver && inputs.release }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.app-versions.outputs.semantic }},enable=${{ steps.app-versions.outputs.is-valid-semver && inputs.release }}
            type=semver,pattern={{major}},value=${{ steps.app-versions.outputs.semantic }},enable=${{ steps.app-versions.outputs.is-valid-semver && inputs.release }}
            type=raw,value=${{ steps.app-versions.outputs.raw }},enable=${{ steps.app-versions.outputs.is-valid-semver && inputs.release }}
            type=raw,value=rolling,enable=${{ inputs.release }}
            type=raw,value=sandbox,enable=${{ ! inputs.release }}

      - name: Upload Bake Metadata
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ inputs.app }}-bake-metadata
          path: ${{ steps.meta.outputs.bake-file }}
          if-no-files-found: error
          retention-days: 1

  build:
    name: Build (${{ matrix.platform }})
    needs:
      - plan
    strategy:
      fail-fast: false
      matrix:
        platform: ${{ fromJson(needs.plan.outputs.platforms) }}
    runs-on: ${{ startsWith(matrix.platform, 'linux/arm') && 'ubuntu-24.04-arm' || 'ubuntu-latest' }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Get Target Architecture
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        id: target
        with:
          script: |-
            core.setOutput('arch', '${{ matrix.platform }}'.split('/').pop());

      - name: Get App Options
        uses: ./.github/actions/app-options
        id: app-options
        with:
          app: ${{ inputs.app }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Download Bake Metadata
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: ${{ inputs.app }}-bake-metadata
          path: ${{ runner.temp }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Add Include Directory to Build Context
        run: |-
          rsync -a --ignore-existing --progress ./include/ ./apps/${{ inputs.app }}/

      - name: Build App
        uses: docker/bake-action@3acf805d94d93a86cce4ca44798a76464a75b88c # v6.9.0
        id: bake
        with:
          files: |
            ./docker-bake.hcl
            cwd://${{ runner.temp }}/docker-metadata-action-bake.json
          set: |
            *.args.VENDOR=${{ github.repository_owner }}
            *.cache-from=${{ format('type=registry,ref=ghcr.io/{0}/build_cache:{1}-{2},mode=max', github.repository_owner, inputs.app, steps.target.outputs.arch) }}
            *.cache-to=${{ inputs.release && format('type=registry,ref=ghcr.io/{0}/build_cache:{1}-{2},mode=max,compression=zstd,force-compression=true', github.repository_owner, inputs.app, steps.target.outputs.arch) || '' }}
            *.labels.org.opencontainers.image.title=${{ inputs.app }}
            *.labels.org.opencontainers.image.url=https://ghcr.io/${{ github.repository_owner }}/${{ inputs.app }}
            *.labels.org.opencontainers.image.version=${{ steps.app-options.outputs.version }}
            *.labels.org.opencontainers.image.revision=${{ github.sha }}
            *.labels.org.opencontainers.image.vendor=${{ github.repository_owner }}
            *.output=type=image,name=ghcr.io/${{ github.repository_owner }}/${{ inputs.app }},push-by-digest=true,name-canonical=true,push=true,compression=zstd,force-compression=true
            *.platform=${{ matrix.platform }}
            *.tags=
          source: .
          targets: image
          workdir: ./apps/${{ inputs.app }}

      - name: Export Digest
        run: |-
          mkdir -p ${{ runner.temp }}/digests
          DIGEST="${{ fromJSON(steps.bake.outputs.metadata).image['containerimage.digest'] }}"
          touch "${{ runner.temp }}/digests/${DIGEST#sha256:}"

      - name: Upload Digest
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ inputs.app }}-digests-${{ steps.target.outputs.arch }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    name: Merge
    runs-on: ubuntu-latest
    needs:
      - build
    outputs:
      digest: ${{ steps.digest.outputs.digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Download Bake Metadata
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: ${{ inputs.app }}-bake-metadata
          path: ${{ runner.temp }}

      - name: Download Digests
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          path: ${{ runner.temp }}/digests
          pattern: ${{ inputs.app }}-digests-*
          merge-multiple: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Create Manifest List and Push
        working-directory: ${{ runner.temp }}/digests
        run: |-
          docker buildx imagetools create \
              $(jq --raw-output --compact-output '.target."docker-metadata-action".tags | map(select(startswith("ghcr.io/${{ github.repository_owner }}/${{ inputs.app }}")) | "-t " + .) | join(" ")' ${{ runner.temp }}/docker-metadata-action-bake.json) \
              $(printf 'ghcr.io/${{ github.repository_owner }}/${{ inputs.app }}@sha256:%s ' *)

      - name: Inspect Image
        run: |-
          docker buildx imagetools inspect ghcr.io/${{ github.repository_owner }}/${{ inputs.app }}:$(jq --raw-output '.target."docker-metadata-action".args.DOCKER_META_VERSION' ${{ runner.temp }}/docker-metadata-action-bake.json)

      - name: Export Digest
        id: digest
        run: |-
          TAG=$(jq --raw-output '.target."docker-metadata-action".args.DOCKER_META_VERSION' ${{ runner.temp }}/docker-metadata-action-bake.json)
          DIGEST=$(docker buildx imagetools inspect ghcr.io/${{ github.repository_owner }}/${{ inputs.app }}:${TAG} --format '{{ json . }}' | jq --raw-output '.manifest.digest')
          echo "digest=${DIGEST}" >> $GITHUB_OUTPUT

  attest:
    name: Attest
    needs:
      - merge
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Upload Dependency Snapshot
        uses: anchore/sbom-action@f8bdd1d8ac5e901a77a92f111440fdb1b593736b # v0.20.6
        with:
          dependency-snapshot: true
          image: ghcr.io/${{ github.repository_owner }}/${{ inputs.app }}@${{ needs.merge.outputs.digest }}

      - name: Attestation
        uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a # v3.0.0
        with:
          push-to-registry: true
          subject-name: ghcr.io/${{ github.repository_owner }}/${{ inputs.app }}
          subject-digest: ${{ needs.merge.outputs.digest }}

      - name: Verify Attestation
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |-
          gh attestation verify --repo ${{ github.repository }} oci://ghcr.io/${{ github.repository_owner }}/${{ inputs.app }}@${{ needs.merge.outputs.digest }}

  test:
    if: ${{ ! inputs.release }}
    name: Test
    needs:
      - merge
      - attest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Generate Token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        id: app-token
        with:
          app-id: ${{ secrets.LAB_ASSISTANT_APP_ID }}
          private-key: ${{ secrets.LAB_ASSISTANT_APP_KEY }}

      - name: Run App Tests
        uses: ./.github/actions/app-tests
        with:
          app: ${{ inputs.app }}
          image: ghcr.io/${{ github.repository_owner }}/${{ inputs.app }}@${{ needs.merge.outputs.digest }}
          token: ${{ github.token }}

      - name: Get App Size Diff
        uses: ./.github/actions/app-size-diff
        id: app-size-diff
        with:
          from-app: ghcr.io/${{ github.repository_owner }}/${{ inputs.app }}:rolling
          to-app: ghcr.io/${{ github.repository_owner }}/${{ inputs.app }}:sandbox

      - name: Post App Size Diff
        uses: marocchino/sticky-pull-request-comment@773744901bac0e8cbb5a0dc842800d45e9b2b405 # v2.9.4
        with:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          header: app-size-diff-${{ inputs.app }}
          message: |
            ${{ steps.app-size-diff.outputs.size-diff-markdown }}

  announce:
    if: ${{ inputs.release && needs.plan.outputs.app-exists != 'true' }}
    name: Announce
    needs:
      - plan
      - attest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Generate Token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        id: app-token
        with:
          app-id: ${{ secrets.LAB_ASSISTANT_APP_ID }}
          private-key: ${{ secrets.LAB_ASSISTANT_APP_KEY }}

      - name: Get App Options
        uses: ./.github/actions/app-options
        id: app-options
        with:
          app: ${{ inputs.app }}

      - name: Get Release Tag
        uses: ./.github/actions/release-tag
        id: release
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Create Release
        uses: ncipollo/release-action@b7eabc95ff50cbeeedec83973935c8f306dfcd0b # v1.20.0
        with:
          body: |
            > [!NOTE]
            > A new app has been added.

            ## 📦 App

            **Name**: [${{ inputs.app }}](https://github.com/${{ github.repository }}/pkgs/container/${{ inputs.app }})
            **Source**: <${{ steps.app-options.outputs.source }}>
          tag: ${{ steps.release.outputs.tag }}
          token: ${{ steps.app-token.outputs.token }}
