---
# yaml-language-server: $schema=https://json.schemastore.org/github-action.json
name: Application Exists
description: Return true or false if the application exists in the container registry

inputs:
  app:
    description: Application Name
    required: true

outputs:
  exists:
    description: Application Exists
    value: ${{ steps.application.outputs.exists }}

runs:
  using: composite
  steps:
    - name: Application Exists
      id: application
      uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
      with:
        script: |
          const applicationName = '${{ inputs.app }}';

          const { data: user } = await github.rest.users.getByUsername({
              username: context.repo.owner,
          });

          let container;
          if (user.type === 'Organization') {
              try {
                  const { data } = await github.rest.packages.getPackageForOrganization({
                      package_type: 'container',
                      package_name: applicationName,
                      org: context.repo.owner,
                  });
                  container = data;
              } catch (error) {
                  if (error.status !== 404) {
                      throw error;
                  }
              }
          } else {
              try {
                  const { data } = await github.rest.packages.getPackageForUser({
                      package_type: 'container',
                      package_name: applicationName,
                      username: context.repo.owner,
                  });
                  container = data;
              } catch (error) {
                  if (error.status !== 404) {
                      throw error;
                  }
              }
          }

          core.setOutput('exists', typeof container !== "undefined");
